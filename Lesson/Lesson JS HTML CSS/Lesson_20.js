'use strict'

// const error1 = '';
// const error2 = '';
// const error3 = '';

// if (!(error1 + error2 + error3)) {
//   console.log('Ошибки нет')
// }

// if (!(error1 || error2 || error3)) {
//   console.log('Ошибки нет')
// }

// if (!(error1 && error2 && error3)) {
//   console.log('Ошибки нет')
// }

// ЦЫКЛЫ с известным числом повторений -----------------------
// это повторяющаяся последовательность действий(обобщённо)
//

// console.log('hellow world!', 1);
// console.log('hellow world!', 2);
// console.log('hellow world!', 3);
// console.log('hellow world!', 4);
// console.log('hellow world!', 5);
// console.log('hellow world!', 6);
// console.log('hellow world!', 7);
// console.log('hellow world!', 8);
// console.log('hellow world!', 9);
// console.log('hellow world!', 10);

// for (let i = 0; i <= 9; i++) {
//   console.log('hellow world!', i + 1); 
  // i + 1 даёт возможность начать счёт 1 и до 10,  а не с 0 до 9 стандартно
// }
// let переменная, может быть внутри for, тогда она существует только внутри него Или отдельно, но тогда  такая переменная является глобальной.
// "i = 0" счётчик,
//  второе условие  i <= 9 ( i > 10 не выполниться, поэтому надо следить за всеми тремя условиями)
// третье  можнон указать: i += 1, i *= 1, i++, i--


// for (let i = 10; i > 0; i--) {
//   console.log('hellow world!', i); 
// }



// for (let i = 0; i < 10; i++) {
//   console.log('hellow world!', i); 
// }



// ====================================
// for (let i = 10; i < 0; i++) {
//   console.log('hellow world!', i); 
// ОСТОРОЖНО С БЕСКОНЕЧНОСТЬЮ!!!!! КОМП ГЛЮЧИТ!!!! ОПОСЯН!!!!
// }
// ===================================

// for (let i = 0; i < 10; i++) {
//   if (i === 5) {
//     continue; // не прерывает итерацию, а пропускает одну, в данном случае (i === 5) и ипереходит к следующей
  // }
  // console.log('hellow world!', i); 
// }


// ЦИКЛ С ПРЕДЪУСЛОВИЕМ ----------------------------------------

let isLoopContinues = true;
let i = 0

// let isLoopContinues = не может начинаться на false  им заканчиваться, иначе условие не будет выполняться, так как оно уже условно  выполнено изначально.

// while (isLoopContinues) {
//   i = Math.random();
//   console.log(i);

//   if (i > 0.5) {
//     isLoopContinues = false;
//   }
// }

// Верхний и нижний Циклы одинаковы, просто меняется конструкция. и положение условий! ВЕРХНИЙ это предусловие! НИЖНИЙ это с ПОСТЪУСЛОВИЕМ!


// ЦИКЛ С ПОСТЪУСЛОВИЕМ ----------------------------------------

// do {
//   i = Math.random();
//   console.log(i);

//   if (i > 0.5) {
//     isLoopContinues = false;
//   } else {
//     isLoopContinues = true;
//   }

// } while (isLoopContinues);


//ПРИМЕР КОТОРЫЙ ПРИШЁЛ АНДРЕЮ В ГОЛОВУ

// while (isLoopContinues) {  //более разложанный вариант 
  // i = 10 * Math.random() + 1; // НЕ ВКЛЮЧАТЬ ТАК КАК ПРОИЗВОДИТ ИТЕРАЦИЮ ДО БЕСКОНЕЧНОСТИ!!!!!!
  // console.log(i)
// }

// console.log(10 * Math.random() + 1); // уменьшенный вариант

//формула: res = a * b + k (пример: i = 10 * Math.random() + 1;) для получения диапазона цикла. где "а" это коифицент, "b" это Math.random(), "k" это число с которого мы будем начинать

while (isLoopContinues) {  
  i = Math.trunc(10 * Math.random() + 1);
  console.log(i);

  if (i === 8) {
    isLoopContinues = false;
  }
}

// Math.round() - это математическое округление по правилам математики

// Math.ceil() - это округление вверх, не зависимо от результата пример 3.3 будет округлено до 4

// Math.floor() это округление вниз, пример 3.7 округляется до 3 

// Math.trunc() данное округление уберает дробь, омтавляя целое число

// ======================================================================================================================================================================================================